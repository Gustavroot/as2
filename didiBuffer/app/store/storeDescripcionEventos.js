/*
 * File: app/store/storeDescripcionEventos.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.store.storeDescripcionEventos', {
    extend: 'Ext.data.Store',

    requires: [
        'MyApp.model.modelDescripcionEventos'
    ],

    config: {
        model: 'MyApp.model.modelDescripcionEventos',
        storeId: 'storeDescripcionEventos',
        proxy: {
            type: 'jsonp',
            url: 'http://www.didicr.com/php/eventoDescripcion.php',
            reader: {
                type: 'json',
                rootProperty: 'ptm'
            }
        },
        listeners: [
            {
                fn: 'onJsonpstoreLoad',
                event: 'load'
            }
        ]
    },

    onJsonpstoreLoad: function(store, records, successful, operation, eOpts) {
        //Estas lineas se ejecutan cuando se ingresa en el container Descripcion Eventos,
        //a esto se llega desde varios lugares
        Ext.getCmp("containerTituloDescripcionEventos").setHtml("<p> &nbsp </p><center><i><b><p>"+records[0].get("nombre")+"</p></b></i></center>");

        if(records[0].get("imagenGran")===""){
            //records[0].get("imagenGran")
            Ext.getCmp("imagenPrincipalDescripcionEventos").setWidth("50%");
            Ext.getCmp("imagenPrincipalDescripcionEventos").setHeight("50%");
            Ext.getCmp("imagenPrincipalDescripcionEventos").setTop("15%");
            Ext.getCmp("imagenPrincipalDescripcionEventos").setLeft("15%");
            Ext.getCmp("imagenPrincipalDescripcionEventos").setHtml("<img src="+"http://www.didicr.com/imagenes/icno_logo.png"+" height='100%' width='100%'>");    
        }
        else{
            Ext.getCmp("imagenPrincipalDescripcionEventos").setWidth("75%");
            Ext.getCmp("imagenPrincipalDescripcionEventos").setHeight("60%");
            Ext.getCmp("imagenPrincipalDescripcionEventos").setTop("15%");
            Ext.getCmp("imagenPrincipalDescripcionEventos").setLeft("0%");

            Ext.getCmp("imagenPrincipalDescripcionEventos").setHtml("<img src="+records[0].get("imagenGran")+" height='100%' width='100%'>");
        }

        Ext.getCmp("containerInfoDescripcionEventos").setHtml("<p> &nbsp </p><center><p> </p><p style='color:black;'>Fecha: "+records[0].get("fecha")+"</p><p style='color:black;'>Hora: "+records[0].get("hora")+"</p><p style='color:black;'>Descripci√≥n: "+records[0].get("descripcion")+"</p><p style='color:black;'>Lugar: "+records[0].get("lugar")+"</p></center>");



        //Este codigo permite verificar si el usuario ya tiene agregado este evento como
        //favorito o no
        Ext.getStore("storeVerificadoEventoFavoritosPerfilUsuario").getProxy().setUrl("http://www.didicr.com/php/didiFavorito/verificaEventoFavoritoUsuario2.php");
        Ext.getStore("storeVerificadoEventoFavoritosPerfilUsuario").getProxy().setExtraParam('idUsuarioParam',idPerfilUsuarioDidi);
        Ext.getStore("storeVerificadoEventoFavoritosPerfilUsuario").getProxy().setExtraParam('idEventoParam',records[0].get("idEvento"));
        //alert(records[0].get("idEvento"));
        Ext.getStore("storeVerificadoEventoFavoritosPerfilUsuario").load();
        //Ext.getStore("storeDescripcionEventos").removeAll();
        //La siguiente variable sirve para saber si hay que verificar o no el estado del evento en Favoritos, o lo
        //que es lo mismo, para saber si hay que correr o no el codigo en el Load del store 
        //storeEnvioAgregadoFavoritosPerfilUsuario
        //variableEjecutoCodigoEnStoreAgregadoEventosFavoritos=1;
        //    alert("fae;");



    }

});