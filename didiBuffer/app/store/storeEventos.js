/*
 * File: app/store/storeEventos.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.store.storeEventos', {
    extend: 'Ext.data.Store',

    requires: [
        'MyApp.model.modelEventos'
    ],

    config: {
        autoSync: true,
        model: 'MyApp.model.modelEventos',
        storeId: 'storeEventos',
        proxy: {
            type: 'jsonp',
            url: 'http://www.didicr.com/php/eventos.php',
            reader: {
                type: 'json',
                idProperty: 'id',
                rootProperty: 'ptm'
            }
        },
        listeners: [
            {
                fn: 'onJsonpstoreLoad',
                event: 'load'
            }
        ]
    },

    onJsonpstoreLoad: function(store, records, successful, operation, eOpts) {
        //Funcion que se ejecuta cuando se le da click en los elementos del carousel
        //de Eventos
        funcionDarClickElementosCarouselEventos=function(img){

            Ext.getCmp("containerPrincipalEventos").setMasked({xtype: 'loadmask', message: 'Espere por favor...'});
            //    alert("fert");
            funcionParaAbrirDescripcionEventos(records[img.getId()[21]].get("id"),"containerEventos");
        };


        //Agregar imagenes a carousel eventos, y sus controladores
        contadorParaAsignarIDimgsEventos=0;
        this.each(function (record) {
            Ext.getCmp("carouselEventos").add(Ext.create('Ext.Img', {html: "<img src="+ record.get("imagenGran") +" height='100%' width='100%'>", id: "imagenCarouselEventos"+contadorParaAsignarIDimgsEventos}));
            Ext.getCmp("imagenCarouselEventos"+contadorParaAsignarIDimgsEventos).addListener('tap',funcionDarClickElementosCarouselEventos);
            contadorParaAsignarIDimgsEventos=contadorParaAsignarIDimgsEventos+1;
        });


        //Luego, se ajusta el carousel Eventos para que tenga a su primera imagen activa
        Ext.getCmp("carouselEventos").setActiveItem(0);
        Ext.getCmp("carouselEventos").getActiveItem().setHtml("<img src="+ record[0].get("imagenGran") +" height='100%' width='100%'>");
        Ext.getCmp("carouselEventos").next();
        //Ext.getCmp("carouselEventos").getActiveItem().setHtml("<img src="+ record[1].get("imagenGran") +" height='100%' width='100%'>");
    }

});